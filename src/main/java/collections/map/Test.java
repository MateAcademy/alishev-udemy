package collections.map;

import java.util.HashMap;
import java.util.Map;

/**
 * @author Sergey Klunniy
 * карта или отображение, когда у нас есть два множества и мы элементы одного
 * множества сопоставляем элементам второго множества
 *
 * есть например таблица классов и мы сопоставдяем
 * у нас есть множества классов - ключей
 * и множества значений - учеников
 * и структура данных хеш меп вобще мэп позволяет нам организовать такую структуру данных
 * 1 -> [....]
 * 2 -> [....]
 */

public class Test {
    public static void main(String[] args) {
        //мы длджны указать тип ключа и тип значений
        Map<Integer, String> map = new HashMap<>();
        // первый элемент это ключ а второй значение которое хотим связать с этим ключом
        map.put(1, "один");
        map.put(2, "два");
        map.put(3, "Три");

        System.out.println(map);
        map.put(3, "Другое значение для ключа три");

        //хотим получить значение указав его ключ
        System.out.println(map.get(1));
        System.out.println(map.get(10)); //null


        // научимся проходится по нашей мап циклом фирич
        // и будем выводить ключ и значение на экран
        // каждая пара ключ значерие это ентри

        for (Map.Entry<Integer, String> entry : map.entrySet()) {
            System.out.println(entry.getKey() + " : " + entry.getValue());
        }

        // класс хешмэп не гарантирует порядка
        //используйте хеш мэп в том случае когда вам не важен порядок ключ значение
        //вам важно просто их наличие
        // здесь используется хеширование
    }
}
